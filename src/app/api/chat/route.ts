import { StreamingTextResponse } from 'ai';
import { GoogleGenerativeAI } from '@google/generative-ai';

// Fun√ß√£o que retorna o contexto para a IA
function getAIContext(): string {
  const currentDate = new Date().toLocaleDateString('pt-BR', {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });

  return `
Voc√™ √© o ChatBot Vibra Energia da VIBRA ENERGIA SA. Aqui est√£o suas diretrizes obrigat√≥rias:

IDENTIDADE CORPORATIVA:
- Empresa: Vibra Energia SA
- Fun√ß√£o: ChatBot Especializado em Combust√≠veis e Regulamenta√ß√µes ANP
- Especialidade: Combust√≠veis, Derivados de Petr√≥leo e Regulamenta√ß√µes ANP
- Miss√£o: Fornecer informa√ß√µes t√©cnicas sobre combust√≠veis e conformidade regulat√≥ria ANP

ESCOPO DE ATUA√á√ÉO - RESPONDA APENAS SOBRE:
‚úÖ COMBUST√çVEIS E DERIVADOS:
- Gasolina (comum, aditivada, premium) - especifica√ß√µes ANP
- Etanol hidratado e anidro - normas de qualidade
- Diesel (comum, S10, S500) - padr√µes de enxofre
- GNV (G√°s Natural Veicular) - regulamenta√ß√µes de seguran√ßa
- Querosene de avia√ß√£o (QAV) - especifica√ß√µes t√©cnicas
- √ìleo combust√≠vel - viscosidade e teor de enxofre
- GLP (G√°s Liquefeito de Petr√≥leo) - normas de distribui√ß√£o

‚úÖ REGULAMENTA√á√ïES ANP:
- Resolu√ß√µes ANP para combust√≠veis
- Especifica√ß√µes t√©cnicas de qualidade
- Procedimentos de fiscaliza√ß√£o
- Normas de armazenamento e distribui√ß√£o
- Certifica√ß√µes e autoriza√ß√µes
- Laudos de qualidade e conformidade
- Infra√ß√µes e penalidades ANP

‚úÖ SERVI√áOS VIBRA ESPECIALIZADOS:
- Postos de combust√≠vel - conformidade ANP
- Lubrificantes Ipiranga - especifica√ß√µes t√©cnicas
- Controle de qualidade de combust√≠veis
- Laborat√≥rios de an√°lise
- Programas de monitoramento
- Sustentabilidade em combust√≠veis

RESTRI√á√ïES IMPORTANTES:
‚ùå N√ÉO responda perguntas sobre:
- Assuntos n√£o relacionados a combust√≠veis/ANP
- Energia el√©trica ou fontes renov√°veis
- Programa√ß√£o ou tecnologia
- Temas pessoais ou gerais
- Outras empresas (exceto compara√ß√µes t√©cnicas de combust√≠veis)
- Pol√≠tica, esportes, entretenimento
- Energia el√©trica ou renov√°veis (fora do escopo combust√≠veis)

COMPORTAMENTO:
- Sempre responda em portugu√™s brasileiro
- Seja t√©cnico mas acess√≠vel
- Use dados e informa√ß√µes precisas sobre combust√≠veis e ANP
- Mantenha foco exclusivo em combust√≠veis e regulamenta√ß√µes ANP
- Cite resolu√ß√µes ANP quando relevante
- Se a pergunta n√£o for do seu escopo, redirecione educadamente

CONTEXTO ATUAL:
- Data/Hora: ${currentDate}
- Representando: Vibra Energia SA
- Especialidade: Combust√≠veis e Regulamenta√ß√µes ANP
- Refer√™ncia: Ag√™ncia Nacional do Petr√≥leo, G√°s Natural e Biocombust√≠veis

QUANDO A PERGUNTA N√ÉO FOR DO SEU ESCOPO:
"Ol√°! Sou o ChatBot Vibra Energia, especializado em combust√≠veis e regulamenta√ß√µes da ANP. Posso ajudar apenas com quest√µes relacionadas a combust√≠veis, derivados de petr√≥leo e normas da Ag√™ncia Nacional do Petr√≥leo. Como posso auxili√°-lo com informa√ß√µes sobre combust√≠veis e conformidade regulat√≥ria? ‚õΩüõ°Ô∏è"

Agora responda √† pergunta do usu√°rio apenas se for relacionada a combust√≠veis ou regulamenta√ß√µes ANP.
`.trim();
}

// Fun√ß√£o para obter informa√ß√µes do sistema (opcional)
function getSystemInfo(): object {
  return {
    timestamp: new Date().toISOString(),
    company: 'Vibra Energia SA',
    agent_type: 'ChatBot Especializado em Combust√≠veis e ANP',
    specialization: 'Combust√≠veis, Derivados de Petr√≥leo e Regulamenta√ß√µes ANP',
    version: '1.0.0',
    model: 'gemini-1.5-pro',
    framework: 'Next.js 15',
    ai_sdk: 'Vercel AI SDK v2.2.37',
    theme: 'Verde/Green (Vibra)',
    anp_reference: 'Ag√™ncia Nacional do Petr√≥leo, G√°s Natural e Biocombust√≠veis',
    allowed_topics: [
      'Gasolina e especifica√ß√µes ANP',
      'Etanol hidratado e anidro',
      'Diesel S10, S500 e padr√µes de enxofre',
      'GNV e regulamenta√ß√µes de seguran√ßa',
      'Querosene de avia√ß√£o (QAV)',
      '√ìleo combust√≠vel e viscosidade',
      'GLP e normas de distribui√ß√£o',
      'Resolu√ß√µes ANP',
      'Especifica√ß√µes t√©cnicas de qualidade',
      'Procedimentos de fiscaliza√ß√£o ANP',
      'Normas de armazenamento',
      'Certifica√ß√µes e autoriza√ß√µes',
      'Laudos de qualidade',
      'Infra√ß√µes e penalidades ANP',
      'Lubrificantes Ipiranga',
      'Controle de qualidade combust√≠veis'
    ],
    restricted_topics: [
      'Energia el√©trica ou fontes renov√°veis',
      'Programa√ß√£o e tecnologia',
      'Assuntos pessoais',
      'Entretenimento',
      'Pol√≠tica',
      'Outras empresas (exceto compara√ß√µes t√©cnicas de combust√≠veis)',
      'Temas n√£o relacionados a combust√≠veis/ANP',
      'Matriz energ√©tica geral (fora do escopo combust√≠veis)'
    ]
  };
}

export async function POST(req: Request) {
  try {
    const { messages } = await req.json();

    const genAI = new GoogleGenerativeAI(process.env.GOOGLE_GENERATIVE_AI_API_KEY!);
    const model = genAI.getGenerativeModel({ model: 'gemini-1.5-pro' });

    // Obter contexto da IA
    const aiContext = getAIContext();

    // Processar mensagens e detectar contexto de conversas anteriores
    const processedMessages = [...messages];
    let conversationHistory = '';

    // Verificar se a √∫ltima mensagem do usu√°rio cont√©m contexto de conversas anteriores
    const lastUserMessage = messages[messages.length - 1];
    if (lastUserMessage && lastUserMessage.role === 'user') {
      const content = lastUserMessage.content;

      // Detectar se h√° contexto de conversas anteriores
      if (content.includes('Contexto de conversas anteriores:')) {
        const parts = content.split('Pergunta atual:');
        if (parts.length === 2) {
          conversationHistory = parts[0].trim();
          const actualQuestion = parts[1].trim();

          // Atualizar a √∫ltima mensagem apenas com a pergunta atual
          processedMessages[processedMessages.length - 1] = {
            ...lastUserMessage,
            content: actualQuestion
          };
        }
      }
    }

    // Construir a conversa completa com contexto
    let fullConversation = aiContext + '\n\n';

    // Adicionar hist√≥rico de conversas anteriores se existir
    if (conversationHistory) {
      fullConversation += `HIST√ìRICO DE CONVERSAS RELACIONADAS:\n${conversationHistory}\n\n`;
      fullConversation += 'Use este hist√≥rico como contexto adicional para fornecer respostas mais precisas e personalizadas, referenciando conversas anteriores quando relevante.\n\n';
    }

    fullConversation += 'CONVERSA ATUAL:\n';

    // Adicionar mensagens da conversa atual
    processedMessages.forEach((message: { role: string; content: string }) => {
      if (message.role === 'user') {
        fullConversation += `USU√ÅRIO: ${message.content}\n\n`;
      } else if (message.role === 'assistant') {
        fullConversation += `ASSISTENTE: ${message.content}\n\n`;
      }
    });

    // Adicionar prompt para resposta
    fullConversation += 'ASSISTENTE: ';

    const result = await model.generateContentStream(fullConversation);

    // Create a readable stream
    const stream = new ReadableStream({
      async start(controller) {
        try {
          for await (const chunk of result.stream) {
            const chunkText = chunk.text();
            controller.enqueue(new TextEncoder().encode(chunkText));
          }
          controller.close();
        } catch (error) {
          controller.error(error);
        }
      }
    });

    return new StreamingTextResponse(stream);
  } catch (error) {
    console.error('Erro na API do chatbot:', error);
    return new Response('Erro interno do servidor', { status: 500 });
  }
}

// Endpoint GET para debugar o contexto (opcional)
export async function GET() {
  try {
    const context = getAIContext();
    const systemInfo = getSystemInfo();

    return Response.json({
      context,
      systemInfo,
      status: 'Context loaded successfully',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    console.error('Erro ao obter contexto:', error);
    return Response.json({ error: 'Erro ao obter contexto' }, { status: 500 });
  }
}
